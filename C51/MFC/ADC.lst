C51 COMPILER V9.00   ADC                                                                   11/30/2016 15:28:35 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN ADC.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE hardware\ADC.c BROWSE DEBUG OBJECTEXTEND PRINT(.\ADC.lst) OBJECT(ADC.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC15F4K60S4 系列 AD转换查询方式举例----------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966-------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.GXWMCU.com --------------------------------------------*/
   9          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  10          /* 如果要在文章中应用此代码,请在文章中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          //本示例在Keil开发环境下请选择Intel的8058芯片型号进行编译
  14          //若无特别说明,工作频率一般为11.0592MHz
  15          
  16          #include <STC15F2K60S2.H>
  17          #include "intrins.h"
  18          #include "ADC.h"
  19          #include "Uart1.h"
  20           
  21           
  22          #define ADC_POWER   0x80            //ADC电源控制位
  23          #define ADC_FLAG    0x10            //ADC完成标志
  24          #define ADC_START   0x08            //ADC起始控制位
  25          #define ADC_SPEEDLL 0x00            //540个时钟
  26          #define ADC_SPEEDL  0x20            //360个时钟
  27          #define ADC_SPEEDH  0x40            //180个时钟
  28          #define ADC_SPEEDHH 0x60            //90个时钟
  29          
  30          unsigned int get_votage_smooth_window = 300;
  31          unsigned int ch = 2;
  32          unsigned int vBandgap = 0;
  33          unsigned int vBandgapReal = 1270;
  34          float Dig2Ang = 0.0;
  35          /*----------------------------
  36          初始化ADC
  37          ----------------------------*/
  38          void InitADC()
  39          {
  40   1              P1ASF = 0x00;                   //不设置P1口为模拟口   读取bangap电压
  41   1              ADC_RES = 0;                    //清除结果寄存器
  42   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
  43   1              Delay100ms();                       //ADC上电并延时
  44   1              vBandgap = GetADCResult(0);
  45   1              Dig2Ang = (float)(vBandgapReal)/vBandgap;
  46   1          P1ASF = 0xff;                   //设置P1口为AD口
  47   1          ADC_RES = 0;                    //清除结果寄存器
  48   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
  49   1          Delay100ms();                       //ADC上电并延时
  50   1      }
  51           
  52          void SetVotageChanel(unsigned int v){
  53   1              ch = v;
  54   1      }
  55          void SetVotageTimes(unsigned int v_data)
C51 COMPILER V9.00   ADC                                                                   11/30/2016 15:28:35 PAGE 2   

  56          {
  57   1        get_votage_smooth_window =   v_data;
  58   1      }
  59          
  60          void GetPosition(){
  61   1          unsigned  int temp[3];
  62   1              ch = 2;
  63   1              temp[0]=getCurrentVoatage();
  64   1              ch = 4;
  65   1              temp[1]=getCurrentVoatage();
  66   1              ch = 6;
  67   1              temp[2]=getCurrentVoatage();
  68   1              SendInt(temp);
  69   1      } 
  70          unsigned int getCurrentVoatage(){
  71   1          
  72   1              //return (unsigned int)(GetADCResult(ch)*Dig2Ang);
  73   1              return GetADCResult(ch);
  74   1      }
  75          
  76          /*----------------------------
  77          读取ADC结果
  78          ----------------------------*/
  79          unsigned  int GetADCResult(unsigned char ch)
  80          {   
  81   1              unsigned int temp;
  82   1              ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ch | ADC_START;
  83   1          _nop_();                        //等待4个NOP
  84   1          _nop_();
  85   1          _nop_();
  86   1          _nop_();
  87   1          while (!(ADC_CONTR & ADC_FLAG));//等待ADC转换完成
  88   1          ADC_CONTR &= ~ADC_FLAG;         //Close ADC
  89   1      
  90   1          temp =       ADC_RES& 0xFF;
  91   1              temp = (temp << 2) | (ADC_RESL & 0x03); 
  92   1      
  93   1          return temp;                //返回数据（10位AD值，ADC_RES全8位+ADC_RESL低2位）      
  94   1              
  95   1      }
  96          
  97           
  98          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    188    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
